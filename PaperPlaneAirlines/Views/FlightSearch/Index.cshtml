@using System.Runtime.InteropServices.JavaScript
@model PaperPlaneAirlines.ViewModels.FlightSearchVM;

@{
    ViewBag.Title = "Flight Search";
    Layout = "_Layout";
}

<div class="container">
    <section class=" d-flex justify-content-center mb-5">
        <form id="searchForm" method="post" asp-action="BookingOverview" asp-controller="Booking" class="w-75">
            <div class="d-flex justify-content-between gap-3 mb-3 w-100">
                <div class="form-group flex-fill align-content-center">
                    <select asp-for="RoundTrip" id="roundTrip" class="form-control">
                        <option value="false" selected>Enkele reis</option>
                        <option value="true">Retour</option>
                    </select>
                </div>
                <div class="form-group d-flex align-items-end">
                    <div class="input-group">
                        <input class="form-control" type="number" asp-for="NumberOfPassengers" min="1" value="1"/>
                        <span class="input-group-text">ðŸ‘¤</span>
                    </div>
                    
                </div>
                <div class="form-group flex-fill align-content-center">
                    <select asp-for="SelectedTravelClassId" id="travelClass" class="form-control">
                        @foreach (var travelClass in Model.SelectionOptionsTravelClass!)
                        {
                            <option value=@travelClass.Id>@travelClass.SeatClass</option>
                        }
                    </select>
                </div>
            </div>
            <div class="d-flex justify-content-between gap-3 mb-3">
                <div class="form-group flex-fill align-content-center">
                    <label asp-for="SelectedFromCityId" class="form-label">Waar wil je vertrekken?</label>
                    <select asp-for="SelectedFromCityId" id="fromCity" class="form-control">
                        @if (Model.SelectionOptionsCity == null)
                        {
                            <option>no cities found</option>
                        }
                        else
                        {
                            @foreach (var city in Model.SelectionOptionsCity)
                            {
                                <option value=@city.Id>@city.Name</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group flex-fill align-content-center">
                    <label asp-for="SelectedToCityId" class="form-label">Waar wil je naartoe?</label>
                    <select asp-for="SelectedToCityId" id="toCity" class="form-control" required>
                        <option value=""> - </option>
                        @if (Model.SelectionOptionsCity == null)
                        {
                            <option>no cities found</option>
                        }
                        else
                        {
                            @foreach (var city in Model.SelectionOptionsCity)
                            {
                                <option value=@city.Id>@city.Name</option>
                            }
                        }
                    </select>
                </div>

                <div class="form-group flex-fill">
                    <label class="form-label" asp-for="FromDate">Wanneer wil je vertrekken?</label>
                    <input id="fromDate" type="date" class="form-control" asp-for="FromDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" value="@DateTime.Now.ToString("yyyy-MM-dd")" max="@DateTime.Now.AddMonths(6).ToString("yyyy-MM-dd")"/>
                </div>
                <div id="toDateSelector" class="form-group flex-fill" style="display: none;">
                    <label class="form-label" asp-for="ToDate">Wanneer wil je terugkomen?</label>
                    <input id="toDate" type="date" class="form-control" asp-for="ToDate"/>
                </div>
            </div>
            <div class="row mb-2">
                <div class="form-group align-content-center col">
                    <button type="submit" class="btn btn-light btn-outline-dark w-100">Zoek vluchten</button>
                </div>
                <div id="customValidationMessage" class="invalid-feedback d-block mt-1 text-center"></div>
            </div>
        </form>
    </section>
    <section>
        <div class="card">
            <div class="card-header">
                <h3>Speciaal voor jou</h3>
            </div>
            <div class="card-body">
                @await Html.PartialAsync("_BookingOptionsPartial", @Model.BookingOptions)
            </div>
        </div>

    </section>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $("#toCity").on("change", function () {
                
                var fromCity = $("#fromCity").val();
                var toCity = $(this).val();

                if (fromCity === toCity && toCity !== "") {
                    $(this).addClass("is-invalid");
                } else {
                    $(this).removeClass("is-invalid");
                }
            });
            
            $("#fromCity").on("change", function () {
                $("#toCity").trigger("change"); 
            });
            
            $('#roundTrip').on('change', function () {
                
                if ($("#roundTrip").val() === "true") {
                    var toDateSelector = $("#toDateSelector");
                    toDateSelector.show();
                    $("#toDate").prop('required', true);
                } else {
                    $("#toDateSelector").hide();
                }
            });
            
            $('#searchForm').submit( function (e) {
                var fromCity = $("#fromCity");
                var toCity = $("#toCity");
                
                if (fromCity.val() === toCity.val()) {
                    e.preventDefault();
                    toCity.addClass("is-invalid");
                    $("#customValidationMessage").text("De bestemming moet verschillen van de vertrekplaats.")
                } else {
                    toCity.removeClass("is-invalid");
                }

                var fromDate = $("#fromDate");
                var toDate = $("#toDate");

                if (fromDate.val() > toDate.val()) {
                    e.preventDefault();
                    toDate.addClass("is-invalid");
                    $("#customValidationMessage").text("De retourdatum kan niet voor de vertrekdatum liggen.")
                } else {
                    toCity.removeClass("is-invalid");
                }
            })
        });
    </script>
}
